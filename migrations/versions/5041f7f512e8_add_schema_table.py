"""add: schema table

Revision ID: 5041f7f512e8
Revises: b24c75985a75
Create Date: 2024-03-01 13:01:01.041641

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5041f7f512e8'
down_revision: Union[str, None] = 'b24c75985a75'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
    CREATE OR REPLACE FUNCTION generate_compost_id(column_name VARCHAR, id_table INTEGER) RETURNS VARCHAR
    AS $$
    BEGIN
        RETURN column_name || '-' || id_table;
    END;
    $$ LANGUAGE plpgsql IMMUTABLE;
    """)
    op.create_table('schema',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_table', sa.Integer(), nullable=False),
    sa.Column('column_name', sa.String(length=50), nullable=False),
    sa.Column('column_type', sa.String(length=20), nullable=False),
    sa.Column('null', sa.Boolean(), nullable=False),
    sa.Column('default', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text("now()")),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('edited', sa.Boolean(), nullable=False, server_default=sa.text("false")),
    sa.Column('compost_id', sa.String(length=100), sa.Computed("generate_compost_id(column_name, id_table)"), nullable=False),
    sa.ForeignKeyConstraint(['id_table'], ['file.file.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('compost_id'),
    schema='file'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schema', schema='file')
    op.execute("drop function if exists generate_compost_id")
    # ### end Alembic commands ###
